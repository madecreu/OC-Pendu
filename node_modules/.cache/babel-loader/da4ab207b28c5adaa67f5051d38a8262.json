{"ast":null,"code":"var _jsxFileName = \"/home/mdecreux/OC/pendu/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [word, setWord] = useState(\"testing\");\n  const [usedLetters, setUsedLetters] = useState([]);\n  const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  const computeDisplay = (word, usedLetters) => {\n    console.log(word);\n    word.replace(/\\w/g, letter => usedLetters.includes(letter) ? letter : '_');\n  };\n\n  const handleTry = letter => {\n    setUsedLetters(usedLetters.push(letter)); // computeDisplay(word, usedLetters);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"word\",\n      children: computeDisplay(word, usedLetters)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Keyboard, {\n        alphabet: alphabet,\n        handleTry: handleTry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6RpjPbrNMOfGshYgJ0+TGqUOuvI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mdecreux/OC/pendu/src/App.js"],"names":["useState","Keyboard","App","word","setWord","usedLetters","setUsedLetters","alphabet","computeDisplay","console","log","replace","letter","includes","handleTry","push"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMO,QAAQ,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,EAAqE,GAArE,EAAyE,GAAzE,EAA6E,GAA7E,EAAiF,GAAjF,EAAqF,GAArF,EAAyF,GAAzF,EAA6F,GAA7F,EAAiG,GAAjG,EAAqG,GAArG,CAAjB;;AAEA,QAAMC,cAAc,GAAG,CAACL,IAAD,EAAOE,WAAP,KAAuB;AAC1CI,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAA,IAAAA,IAAI,CAACQ,OAAL,CAAa,KAAb,EAAqBC,MAAD,IAAaP,WAAW,CAACQ,QAAZ,CAAqBD,MAArB,IAA+BA,MAA/B,GAAwC,GAAzE;AACH,GAHD;;AAKA,QAAME,SAAS,GAAGF,MAAM,IAAI;AACxBN,IAAAA,cAAc,CAACD,WAAW,CAACU,IAAZ,CAAiBH,MAAjB,CAAD,CAAd,CADwB,CAExB;AACH,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBAAsBJ,cAAc,CAACL,IAAD,EAAOE,WAAP;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEE,QAApB;AAA8B,QAAA,SAAS,EAAEO;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxBD;;GAAMZ,G;;KAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import {useState} from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport './App.css'\n\nconst App = () => {\n\n  const [word, setWord] = useState(\"testing\");\n  const [usedLetters, setUsedLetters] = useState([]);\n  const alphabet = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n\n  const computeDisplay = (word, usedLetters) => {\n      console.log(word)\n      word.replace(/\\w/g, (letter) => (usedLetters.includes(letter) ? letter : '_'));\n  }\n\n  const handleTry = letter => {\n      setUsedLetters(usedLetters.push(letter));\n      // computeDisplay(word, usedLetters);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"word\">{computeDisplay(word, usedLetters)}</h1>\n      <div>\n          <Keyboard alphabet={alphabet} handleTry={handleTry}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}